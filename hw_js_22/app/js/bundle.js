(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

//name
var name = prompt('Как Вас зовут?');
alert('Привет' + " " + name + '!'); //born

var yearsBorn = prompt('В каком году вы родились?');

if (yearsBorn === '' || yearsBorn === null) {
  alert('Укажите Ваш год рождения');
} else {
  var yearsNow = 2019;
  var years = yearsNow - yearsBorn;
  alert('Вам ' + years + ' лет!');
} //perimetr


var large = prompt('Задайте длинну стороны квадрата');
var perimetr = large * 4;
alert('Периметр равен' + " " + perimetr); //kolo

var radius = prompt('Введите радиус окружности');
var kolo = Math.pow(radius, 2) * 3.14;
alert('Площадь равна' + " " + kolo); //speed

var km = prompt('Введите расстояние между городами км');
var time = prompt('Введите время которое вы хотите потратить на дорогу часов');
var speed = km / time;
alert('Необходимая скорость' + " " + speed + 'км/ч'); //kurs

var dollar = prompt('Введите сумму для обмена');
var dollarKurs = 23.90;
var euroKurs = 26.10;
var euro = dollar * dollarKurs / euroKurs;
alert('Итого:' + " " + euro + " " + 'евро'); //fleshka

var fleshka = prompt('Укажите объём флешки в Гб');
var konvertMb = fleshka * 1024;
var file = 820;
var colichestvo = Math.trunc(konvertMb / file);
alert('На флешку поместиться' + " " + colichestvo + " " + 'файла(ов)'); //shokolad

var cashel = prompt('Введите сумму денег в кошельке');
var price = prompt('Введите цену шоколадки');
var kol = Math.trunc(cashel / price);
var lastCash = cashel % price;
alert('Денег хватит на' + " " + kol + " " + 'шоколадки, остаток' + " " + lastCash); //convert

var a = prompt('Введите число');
alert(('' + a).split('').reverse().join('')); //deposit

var vklad = prompt('Введите сумму вклада');
var procent = 5 / 12;
var suma = vklad * procent / 100 * 2;
alert('Сумма начисленных процентов' + " " + suma);

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy9od19qc18yMi9zcmMvanMvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQTtBQUNBLElBQUksSUFBSSxHQUFDLE1BQU0sQ0FBQyxnQkFBRCxDQUFmO0FBQ0EsS0FBSyxDQUFDLFdBQVMsR0FBVCxHQUFhLElBQWIsR0FBa0IsR0FBbkIsQ0FBTCxDLENBRUE7O0FBQ0EsSUFBSSxTQUFTLEdBQUMsTUFBTSxDQUFDLDJCQUFELENBQXBCOztBQUNBLElBQUksU0FBUyxLQUFHLEVBQVosSUFBaUIsU0FBUyxLQUFHLElBQWpDLEVBQXVDO0FBQ3RDLEVBQUEsS0FBSyxDQUFDLDBCQUFELENBQUw7QUFDQSxDQUZELE1BR0s7QUFDSixNQUFNLFFBQVEsR0FBQyxJQUFmO0FBQ0EsTUFBSSxLQUFLLEdBQUMsUUFBUSxHQUFDLFNBQW5CO0FBQ0EsRUFBQSxLQUFLLENBQUMsU0FBTyxLQUFQLEdBQWEsT0FBZCxDQUFMO0FBQ0EsQyxDQUVEOzs7QUFDQSxJQUFJLEtBQUssR0FBQyxNQUFNLENBQUMsaUNBQUQsQ0FBaEI7QUFDQSxJQUFJLFFBQVEsR0FBQyxLQUFLLEdBQUMsQ0FBbkI7QUFDQSxLQUFLLENBQUMsbUJBQWlCLEdBQWpCLEdBQXNCLFFBQXZCLENBQUwsQyxDQUVBOztBQUNBLElBQUksTUFBTSxHQUFDLE1BQU0sQ0FBQywyQkFBRCxDQUFqQjtBQUNBLElBQUksSUFBSSxHQUFDLElBQUksQ0FBQyxHQUFMLENBQVMsTUFBVCxFQUFnQixDQUFoQixJQUFtQixJQUE1QjtBQUNBLEtBQUssQ0FBQyxrQkFBZ0IsR0FBaEIsR0FBcUIsSUFBdEIsQ0FBTCxDLENBRUE7O0FBQ0EsSUFBSSxFQUFFLEdBQUMsTUFBTSxDQUFDLHNDQUFELENBQWI7QUFDQSxJQUFJLElBQUksR0FBQyxNQUFNLENBQUMsMkRBQUQsQ0FBZjtBQUNBLElBQUksS0FBSyxHQUFDLEVBQUUsR0FBQyxJQUFiO0FBQ0EsS0FBSyxDQUFDLHlCQUF1QixHQUF2QixHQUE0QixLQUE1QixHQUFrQyxNQUFuQyxDQUFMLEMsQ0FFQTs7QUFDQSxJQUFJLE1BQU0sR0FBQyxNQUFNLENBQUMsMEJBQUQsQ0FBakI7QUFDQSxJQUFNLFVBQVUsR0FBQyxLQUFqQjtBQUNBLElBQU0sUUFBUSxHQUFDLEtBQWY7QUFDQSxJQUFJLElBQUksR0FBQyxNQUFNLEdBQUMsVUFBUCxHQUFrQixRQUEzQjtBQUNBLEtBQUssQ0FBQyxXQUFTLEdBQVQsR0FBYyxJQUFkLEdBQW1CLEdBQW5CLEdBQXVCLE1BQXhCLENBQUwsQyxDQUVBOztBQUNBLElBQUksT0FBTyxHQUFDLE1BQU0sQ0FBQywyQkFBRCxDQUFsQjtBQUNBLElBQUksU0FBUyxHQUFDLE9BQU8sR0FBQyxJQUF0QjtBQUNBLElBQU0sSUFBSSxHQUFDLEdBQVg7QUFDQSxJQUFJLFdBQVcsR0FBQyxJQUFJLENBQUMsS0FBTCxDQUFXLFNBQVMsR0FBQyxJQUFyQixDQUFoQjtBQUNBLEtBQUssQ0FBQywwQkFBd0IsR0FBeEIsR0FBNkIsV0FBN0IsR0FBeUMsR0FBekMsR0FBNkMsV0FBOUMsQ0FBTCxDLENBR0E7O0FBQ0EsSUFBSSxNQUFNLEdBQUMsTUFBTSxDQUFDLGdDQUFELENBQWpCO0FBQ0EsSUFBSSxLQUFLLEdBQUMsTUFBTSxDQUFDLHdCQUFELENBQWhCO0FBQ0EsSUFBSSxHQUFHLEdBQUMsSUFBSSxDQUFDLEtBQUwsQ0FBVyxNQUFNLEdBQUMsS0FBbEIsQ0FBUjtBQUNBLElBQUksUUFBUSxHQUFDLE1BQU0sR0FBQyxLQUFwQjtBQUNBLEtBQUssQ0FBQyxvQkFBa0IsR0FBbEIsR0FBdUIsR0FBdkIsR0FBMkIsR0FBM0IsR0FBK0Isb0JBQS9CLEdBQW9ELEdBQXBELEdBQXlELFFBQTFELENBQUwsQyxDQUVBOztBQUNBLElBQUksQ0FBQyxHQUFDLE1BQU0sQ0FBQyxlQUFELENBQVo7QUFDQSxLQUFLLENBQUMsQ0FBQyxLQUFLLENBQU4sRUFBUyxLQUFULENBQWUsRUFBZixFQUFtQixPQUFuQixHQUE2QixJQUE3QixDQUFrQyxFQUFsQyxDQUFELENBQUwsQyxDQUVBOztBQUNBLElBQUksS0FBSyxHQUFDLE1BQU0sQ0FBQyxzQkFBRCxDQUFoQjtBQUNBLElBQU0sT0FBTyxHQUFDLElBQUUsRUFBaEI7QUFDQSxJQUFJLElBQUksR0FBRSxLQUFLLEdBQUMsT0FBUCxHQUFnQixHQUFoQixHQUFvQixDQUE3QjtBQUNBLEtBQUssQ0FBQyxnQ0FBOEIsR0FBOUIsR0FBbUMsSUFBcEMsQ0FBTCIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiLy9uYW1lXHJcbmxldCBuYW1lPXByb21wdCgn0JrQsNC6INCS0LDRgSDQt9C+0LLRg9GCPycpO1xyXG5hbGVydCgn0J/RgNC40LLQtdGCJytcIiBcIituYW1lKychJyk7XHJcblxyXG4vL2Jvcm5cclxubGV0IHllYXJzQm9ybj1wcm9tcHQoJ9CSINC60LDQutC+0Lwg0LPQvtC00YMg0LLRiyDRgNC+0LTQuNC70LjRgdGMPycpO1xyXG5pZiAoeWVhcnNCb3JuPT09Jyd8fCB5ZWFyc0Jvcm49PT1udWxsKSB7XHJcblx0YWxlcnQoJ9Cj0LrQsNC20LjRgtC1INCS0LDRiCDQs9C+0LQg0YDQvtC20LTQtdC90LjRjycpO1xyXG59XHJcbmVsc2Uge1xyXG5cdGNvbnN0IHllYXJzTm93PTIwMTk7XHJcblx0bGV0IHllYXJzPXllYXJzTm93LXllYXJzQm9ybjtcclxuXHRhbGVydCgn0JLQsNC8ICcreWVhcnMrJyDQu9C10YIhJyk7XHJcbn1cclxuXHJcbi8vcGVyaW1ldHJcclxubGV0IGxhcmdlPXByb21wdCgn0JfQsNC00LDQudGC0LUg0LTQu9C40L3QvdGDINGB0YLQvtGA0L7QvdGLINC60LLQsNC00YDQsNGC0LAnKTtcclxubGV0IHBlcmltZXRyPWxhcmdlKjQ7XHJcbmFsZXJ0KCfQn9C10YDQuNC80LXRgtGAINGA0LDQstC10L0nK1wiIFwiICtwZXJpbWV0cik7XHJcblxyXG4vL2tvbG9cclxubGV0IHJhZGl1cz1wcm9tcHQoJ9CS0LLQtdC00LjRgtC1INGA0LDQtNC40YPRgSDQvtC60YDRg9C20L3QvtGB0YLQuCcpO1xyXG5sZXQga29sbz1NYXRoLnBvdyhyYWRpdXMsMikqMy4xNDtcclxuYWxlcnQoJ9Cf0LvQvtGJ0LDQtNGMINGA0LDQstC90LAnK1wiIFwiICtrb2xvKTtcclxuXHJcbi8vc3BlZWRcclxubGV0IGttPXByb21wdCgn0JLQstC10LTQuNGC0LUg0YDQsNGB0YHRgtC+0Y/QvdC40LUg0LzQtdC20LTRgyDQs9C+0YDQvtC00LDQvNC4INC60LwnKTtcclxubGV0IHRpbWU9cHJvbXB0KCfQktCy0LXQtNC40YLQtSDQstGA0LXQvNGPINC60L7RgtC+0YDQvtC1INCy0Ysg0YXQvtGC0LjRgtC1INC/0L7RgtGA0LDRgtC40YLRjCDQvdCwINC00L7RgNC+0LPRgyDRh9Cw0YHQvtCyJyk7XHJcbmxldCBzcGVlZD1rbS90aW1lO1xyXG5hbGVydCgn0J3QtdC+0LHRhdC+0LTQuNC80LDRjyDRgdC60L7RgNC+0YHRgtGMJytcIiBcIiArc3BlZWQrJ9C60Lwv0YcnKTtcclxuXHJcbi8va3Vyc1xyXG5sZXQgZG9sbGFyPXByb21wdCgn0JLQstC10LTQuNGC0LUg0YHRg9C80LzRgyDQtNC70Y8g0L7QsdC80LXQvdCwJyk7XHJcbmNvbnN0IGRvbGxhckt1cnM9MjMuOTA7XHJcbmNvbnN0IGV1cm9LdXJzPTI2LjEwO1xyXG5sZXQgZXVybz1kb2xsYXIqZG9sbGFyS3Vycy9ldXJvS3VycztcclxuYWxlcnQoJ9CY0YLQvtCz0L46JytcIiBcIiArZXVybytcIiBcIisn0LXQstGA0L4nKTtcclxuXHJcbi8vZmxlc2hrYVxyXG5sZXQgZmxlc2hrYT1wcm9tcHQoJ9Cj0LrQsNC20LjRgtC1INC+0LHRitGR0Lwg0YTQu9C10YjQutC4INCyINCT0LEnKTtcclxubGV0IGtvbnZlcnRNYj1mbGVzaGthKjEwMjQ7XHJcbmNvbnN0IGZpbGU9ODIwO1xyXG5sZXQgY29saWNoZXN0dm89TWF0aC50cnVuYyhrb252ZXJ0TWIvZmlsZSk7XHJcbmFsZXJ0KCfQndCwINGE0LvQtdGI0LrRgyDQv9C+0LzQtdGB0YLQuNGC0YzRgdGPJytcIiBcIiArY29saWNoZXN0dm8rXCIgXCIrJ9GE0LDQudC70LAo0L7QsiknKTtcclxuXHJcblxyXG4vL3Nob2tvbGFkXHJcbmxldCBjYXNoZWw9cHJvbXB0KCfQktCy0LXQtNC40YLQtSDRgdGD0LzQvNGDINC00LXQvdC10LMg0LIg0LrQvtGI0LXQu9GM0LrQtScpO1xyXG5sZXQgcHJpY2U9cHJvbXB0KCfQktCy0LXQtNC40YLQtSDRhtC10L3RgyDRiNC+0LrQvtC70LDQtNC60LgnKTtcclxubGV0IGtvbD1NYXRoLnRydW5jKGNhc2hlbC9wcmljZSk7XHJcbmxldCBsYXN0Q2FzaD1jYXNoZWwlcHJpY2U7XHJcbmFsZXJ0KCfQlNC10L3QtdCzINGF0LLQsNGC0LjRgiDQvdCwJytcIiBcIiAra29sK1wiIFwiKyfRiNC+0LrQvtC70LDQtNC60LgsINC+0YHRgtCw0YLQvtC6JytcIiBcIiArbGFzdENhc2gpO1xyXG5cclxuLy9jb252ZXJ0XHJcbmxldCBhPXByb21wdCgn0JLQstC10LTQuNGC0LUg0YfQuNGB0LvQvicpO1xyXG5hbGVydCgoJycgKyBhKS5zcGxpdCgnJykucmV2ZXJzZSgpLmpvaW4oJycpKTtcclxuXHJcbi8vZGVwb3NpdFxyXG5sZXQgdmtsYWQ9cHJvbXB0KCfQktCy0LXQtNC40YLQtSDRgdGD0LzQvNGDINCy0LrQu9Cw0LTQsCcpO1xyXG5jb25zdCBwcm9jZW50PTUvMTI7XHJcbmxldCBzdW1hPSh2a2xhZCpwcm9jZW50KS8xMDAqMjtcclxuYWxlcnQoJ9Ch0YPQvNC80LAg0L3QsNGH0LjRgdC70LXQvdC90YvRhSDQv9GA0L7RhtC10L3RgtC+0LInK1wiIFwiICtzdW1hKTtcclxuIl0sInByZUV4aXN0aW5nQ29tbWVudCI6Ii8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltNXZaR1ZmYlc5a2RXeGxjeTlpY205M2MyVnlMWEJoWTJzdlgzQnlaV3gxWkdVdWFuTWlMQ0p3Y205cVpXTjBjeTlvZDE5cWMxOHlNaTl6Y21NdmFuTXZZWEJ3TG1weklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPenM3UVVOQlFUdEJRVU5CTEVsQlFVa3NTVUZCU1N4SFFVRkRMRTFCUVUwc1EwRkJReXhuUWtGQlJDeERRVUZtTzBGQlEwRXNTMEZCU3l4RFFVRkRMRmRCUVZNc1IwRkJWQ3hIUVVGaExFbEJRV0lzUjBGQmEwSXNSMEZCYmtJc1EwRkJUQ3hETEVOQlJVRTdPMEZCUTBFc1NVRkJTU3hUUVVGVExFZEJRVU1zVFVGQlRTeERRVUZETERKQ1FVRkVMRU5CUVhCQ096dEJRVU5CTEVsQlFVa3NVMEZCVXl4TFFVRkhMRVZCUVZvc1NVRkJhVUlzVTBGQlV5eExRVUZITEVsQlFXcERMRVZCUVhWRE8wRkJRM1JETEVWQlFVRXNTMEZCU3l4RFFVRkRMREJDUVVGRUxFTkJRVXc3UVVGRFFTeERRVVpFTEUxQlIwczdRVUZEU2l4TlFVRk5MRkZCUVZFc1IwRkJReXhKUVVGbU8wRkJRMEVzVFVGQlNTeExRVUZMTEVkQlFVTXNVVUZCVVN4SFFVRkRMRk5CUVc1Q08wRkJRMEVzUlVGQlFTeExRVUZMTEVOQlFVTXNVMEZCVHl4TFFVRlFMRWRCUVdFc1QwRkJaQ3hEUVVGTU8wRkJRMEVzUXl4RFFVVkVPenM3UVVGRFFTeEpRVUZKTEV0QlFVc3NSMEZCUXl4TlFVRk5MRU5CUVVNc2FVTkJRVVFzUTBGQmFFSTdRVUZEUVN4SlFVRkpMRkZCUVZFc1IwRkJReXhMUVVGTExFZEJRVU1zUTBGQmJrSTdRVUZEUVN4TFFVRkxMRU5CUVVNc2JVSkJRV2xDTEVkQlFXcENMRWRCUVhOQ0xGRkJRWFpDTEVOQlFVd3NReXhEUVVWQk96dEJRVU5CTEVsQlFVa3NUVUZCVFN4SFFVRkRMRTFCUVUwc1EwRkJReXd5UWtGQlJDeERRVUZxUWp0QlFVTkJMRWxCUVVrc1NVRkJTU3hIUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZNTEVOQlFWTXNUVUZCVkN4RlFVRm5RaXhEUVVGb1FpeEpRVUZ0UWl4SlFVRTFRanRCUVVOQkxFdEJRVXNzUTBGQlF5eHJRa0ZCWjBJc1IwRkJhRUlzUjBGQmNVSXNTVUZCZEVJc1EwRkJUQ3hETEVOQlJVRTdPMEZCUTBFc1NVRkJTU3hGUVVGRkxFZEJRVU1zVFVGQlRTeERRVUZETEhORFFVRkVMRU5CUVdJN1FVRkRRU3hKUVVGSkxFbEJRVWtzUjBGQlF5eE5RVUZOTEVOQlFVTXNNa1JCUVVRc1EwRkJaanRCUVVOQkxFbEJRVWtzUzBGQlN5eEhRVUZETEVWQlFVVXNSMEZCUXl4SlFVRmlPMEZCUTBFc1MwRkJTeXhEUVVGRExIbENRVUYxUWl4SFFVRjJRaXhIUVVFMFFpeExRVUUxUWl4SFFVRnJReXhOUVVGdVF5eERRVUZNTEVNc1EwRkZRVHM3UVVGRFFTeEpRVUZKTEUxQlFVMHNSMEZCUXl4TlFVRk5MRU5CUVVNc01FSkJRVVFzUTBGQmFrSTdRVUZEUVN4SlFVRk5MRlZCUVZVc1IwRkJReXhMUVVGcVFqdEJRVU5CTEVsQlFVMHNVVUZCVVN4SFFVRkRMRXRCUVdZN1FVRkRRU3hKUVVGSkxFbEJRVWtzUjBGQlF5eE5RVUZOTEVkQlFVTXNWVUZCVUN4SFFVRnJRaXhSUVVFelFqdEJRVU5CTEV0QlFVc3NRMEZCUXl4WFFVRlRMRWRCUVZRc1IwRkJZeXhKUVVGa0xFZEJRVzFDTEVkQlFXNUNMRWRCUVhWQ0xFMUJRWGhDTEVOQlFVd3NReXhEUVVWQk96dEJRVU5CTEVsQlFVa3NUMEZCVHl4SFFVRkRMRTFCUVUwc1EwRkJReXd5UWtGQlJDeERRVUZzUWp0QlFVTkJMRWxCUVVrc1UwRkJVeXhIUVVGRExFOUJRVThzUjBGQlF5eEpRVUYwUWp0QlFVTkJMRWxCUVUwc1NVRkJTU3hIUVVGRExFZEJRVmc3UVVGRFFTeEpRVUZKTEZkQlFWY3NSMEZCUXl4SlFVRkpMRU5CUVVNc1MwRkJUQ3hEUVVGWExGTkJRVk1zUjBGQlF5eEpRVUZ5UWl4RFFVRm9RanRCUVVOQkxFdEJRVXNzUTBGQlF5d3dRa0ZCZDBJc1IwRkJlRUlzUjBGQk5rSXNWMEZCTjBJc1IwRkJlVU1zUjBGQmVrTXNSMEZCTmtNc1YwRkJPVU1zUTBGQlRDeERMRU5CUjBFN08wRkJRMEVzU1VGQlNTeE5RVUZOTEVkQlFVTXNUVUZCVFN4RFFVRkRMR2REUVVGRUxFTkJRV3BDTzBGQlEwRXNTVUZCU1N4TFFVRkxMRWRCUVVNc1RVRkJUU3hEUVVGRExIZENRVUZFTEVOQlFXaENPMEZCUTBFc1NVRkJTU3hIUVVGSExFZEJRVU1zU1VGQlNTeERRVUZETEV0QlFVd3NRMEZCVnl4TlFVRk5MRWRCUVVNc1MwRkJiRUlzUTBGQlVqdEJRVU5CTEVsQlFVa3NVVUZCVVN4SFFVRkRMRTFCUVUwc1IwRkJReXhMUVVGd1FqdEJRVU5CTEV0QlFVc3NRMEZCUXl4dlFrRkJhMElzUjBGQmJFSXNSMEZCZFVJc1IwRkJka0lzUjBGQk1rSXNSMEZCTTBJc1IwRkJLMElzYjBKQlFTOUNMRWRCUVc5RUxFZEJRWEJFTEVkQlFYbEVMRkZCUVRGRUxFTkJRVXdzUXl4RFFVVkJPenRCUVVOQkxFbEJRVWtzUTBGQlF5eEhRVUZETEUxQlFVMHNRMEZCUXl4bFFVRkVMRU5CUVZvN1FVRkRRU3hMUVVGTExFTkJRVU1zUTBGQlF5eExRVUZMTEVOQlFVNHNSVUZCVXl4TFFVRlVMRU5CUVdVc1JVRkJaaXhGUVVGdFFpeFBRVUZ1UWl4SFFVRTJRaXhKUVVFM1FpeERRVUZyUXl4RlFVRnNReXhEUVVGRUxFTkJRVXdzUXl4RFFVVkJPenRCUVVOQkxFbEJRVWtzUzBGQlN5eEhRVUZETEUxQlFVMHNRMEZCUXl4elFrRkJSQ3hEUVVGb1FqdEJRVU5CTEVsQlFVMHNUMEZCVHl4SFFVRkRMRWxCUVVVc1JVRkJhRUk3UVVGRFFTeEpRVUZKTEVsQlFVa3NSMEZCUlN4TFFVRkxMRWRCUVVNc1QwRkJVQ3hIUVVGblFpeEhRVUZvUWl4SFFVRnZRaXhEUVVFM1FqdEJRVU5CTEV0QlFVc3NRMEZCUXl4blEwRkJPRUlzUjBGQk9VSXNSMEZCYlVNc1NVRkJjRU1zUTBGQlRDSXNJbVpwYkdVaU9pSm5aVzVsY21GMFpXUXVhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpS0daMWJtTjBhVzl1S0NsN1puVnVZM1JwYjI0Z2NpaGxMRzRzZENsN1puVnVZM1JwYjI0Z2J5aHBMR1lwZTJsbUtDRnVXMmxkS1h0cFppZ2haVnRwWFNsN2RtRnlJR005WENKbWRXNWpkR2x2Ymx3aVBUMTBlWEJsYjJZZ2NtVnhkV2x5WlNZbWNtVnhkV2x5WlR0cFppZ2haaVltWXlseVpYUjFjbTRnWXlocExDRXdLVHRwWmloMUtYSmxkSFZ5YmlCMUtHa3NJVEFwTzNaaGNpQmhQVzVsZHlCRmNuSnZjaWhjSWtOaGJtNXZkQ0JtYVc1a0lHMXZaSFZzWlNBblhDSXJhU3RjSWlkY0lpazdkR2h5YjNjZ1lTNWpiMlJsUFZ3aVRVOUVWVXhGWDA1UFZGOUdUMVZPUkZ3aUxHRjlkbUZ5SUhBOWJsdHBYVDE3Wlhod2IzSjBjenA3ZlgwN1pWdHBYVnN3WFM1allXeHNLSEF1Wlhod2IzSjBjeXhtZFc1amRHbHZiaWh5S1h0MllYSWdiajFsVzJsZFd6RmRXM0pkTzNKbGRIVnliaUJ2S0c1OGZISXBmU3h3TEhBdVpYaHdiM0owY3l4eUxHVXNiaXgwS1gxeVpYUjFjbTRnYmx0cFhTNWxlSEJ2Y25SemZXWnZjaWgyWVhJZ2RUMWNJbVoxYm1OMGFXOXVYQ0k5UFhSNWNHVnZaaUJ5WlhGMWFYSmxKaVp5WlhGMWFYSmxMR2s5TUR0cFBIUXViR1Z1WjNSb08ya3JLeWx2S0hSYmFWMHBPM0psZEhWeWJpQnZmWEpsZEhWeWJpQnlmU2tvS1NJc0lpOHZibUZ0WlZ4eVhHNXNaWFFnYm1GdFpUMXdjbTl0Y0hRb0o5Q2EwTERRdWlEUWt0Q3cwWUVnMExmUXZ0Q3kwWVBSZ2o4bktUdGNjbHh1WVd4bGNuUW9KOUNmMFlEUXVOQ3kwTFhSZ2ljclhDSWdYQ0lyYm1GdFpTc25JU2NwTzF4eVhHNWNjbHh1THk5aWIzSnVYSEpjYm14bGRDQjVaV0Z5YzBKdmNtNDljSEp2YlhCMEtDZlFraURRdXRDdzBMclF2dEM4SU5DejBMN1F0TkdESU5DeTBZc2cwWURRdnRDMDBMalF1OUM0MFlIUmpEOG5LVHRjY2x4dWFXWWdLSGxsWVhKelFtOXliajA5UFNjbmZId2dlV1ZoY25OQ2IzSnVQVDA5Ym5Wc2JDa2dlMXh5WEc1Y2RHRnNaWEowS0NmUW85QzYwTERRdHRDNDBZTFF0U0RRa3RDdzBZZ2cwTFBRdnRDMElOR0EwTDdRdHRDMDBMWFF2ZEM0MFk4bktUdGNjbHh1ZlZ4eVhHNWxiSE5sSUh0Y2NseHVYSFJqYjI1emRDQjVaV0Z5YzA1dmR6MHlNREU1TzF4eVhHNWNkR3hsZENCNVpXRnljejE1WldGeWMwNXZkeTE1WldGeWMwSnZjbTQ3WEhKY2JseDBZV3hsY25Rb0o5Q1MwTERRdkNBbkszbGxZWEp6S3ljZzBMdlF0ZEdDSVNjcE8xeHlYRzU5WEhKY2JseHlYRzR2TDNCbGNtbHRaWFJ5WEhKY2JteGxkQ0JzWVhKblpUMXdjbTl0Y0hRb0o5Q1gwTERRdE5DdzBMblJndEMxSU5DMDBMdlF1TkM5MEwzUmd5RFJnZEdDMEw3UmdOQyswTDNSaXlEUXV0Q3kwTERRdE5HQTBMRFJndEN3SnlrN1hISmNibXhsZENCd1pYSnBiV1YwY2oxc1lYSm5aU28wTzF4eVhHNWhiR1Z5ZENnbjBKL1F0ZEdBMExqUXZOQzEwWUxSZ0NEUmdOQ3cwTExRdGRDOUp5dGNJaUJjSWlBcmNHVnlhVzFsZEhJcE8xeHlYRzVjY2x4dUx5OXJiMnh2WEhKY2JteGxkQ0J5WVdScGRYTTljSEp2YlhCMEtDZlFrdEN5MExYUXROQzQwWUxRdFNEUmdOQ3cwTFRRdU5HRDBZRWcwTDdRdXRHQTBZUFF0dEM5MEw3UmdkR0MwTGduS1R0Y2NseHViR1YwSUd0dmJHODlUV0YwYUM1d2IzY29jbUZrYVhWekxESXBLak11TVRRN1hISmNibUZzWlhKMEtDZlFuOUM3MEw3UmlkQ3cwTFRSakNEUmdOQ3cwTExRdmRDd0p5dGNJaUJjSWlBcmEyOXNieWs3WEhKY2JseHlYRzR2TDNOd1pXVmtYSEpjYm14bGRDQnJiVDF3Y205dGNIUW9KOUNTMExMUXRkQzAwTGpSZ3RDMUlOR0EwTERSZ2RHQjBZTFF2dEdQMEwzUXVOQzFJTkM4MExYUXR0QzAwWU1nMExQUXZ0R0EwTDdRdE5DdzBMelF1Q0RRdXRDOEp5azdYSEpjYm14bGRDQjBhVzFsUFhCeWIyMXdkQ2duMEpMUXN0QzEwTFRRdU5HQzBMVWcwTExSZ05DMTBMelJqeURRdXRDKzBZTFF2dEdBMEw3UXRTRFFzdEdMSU5HRjBMN1JndEM0MFlMUXRTRFF2OUMrMFlMUmdOQ3cwWUxRdU5HQzBZd2cwTDNRc0NEUXROQyswWURRdnRDejBZTWcwWWZRc05HQjBMN1FzaWNwTzF4eVhHNXNaWFFnYzNCbFpXUTlhMjB2ZEdsdFpUdGNjbHh1WVd4bGNuUW9KOUNkMExYUXZ0Q3gwWVhRdnRDMDBMalF2TkN3MFk4ZzBZSFF1dEMrMFlEUXZ0R0IwWUxSakNjclhDSWdYQ0lnSzNOd1pXVmtLeWZRdXRDOEw5R0hKeWs3WEhKY2JseHlYRzR2TDJ0MWNuTmNjbHh1YkdWMElHUnZiR3hoY2oxd2NtOXRjSFFvSjlDUzBMTFF0ZEMwMExqUmd0QzFJTkdCMFlQUXZOQzgwWU1nMExUUXU5R1BJTkMrMExIUXZOQzEwTDNRc0NjcE8xeHlYRzVqYjI1emRDQmtiMnhzWVhKTGRYSnpQVEl6TGprd08xeHlYRzVqYjI1emRDQmxkWEp2UzNWeWN6MHlOaTR4TUR0Y2NseHViR1YwSUdWMWNtODlaRzlzYkdGeUttUnZiR3hoY2t0MWNuTXZaWFZ5YjB0MWNuTTdYSEpjYm1Gc1pYSjBLQ2ZRbU5HQzBMN1FzOUMrT2ljclhDSWdYQ0lnSzJWMWNtOHJYQ0lnWENJcko5QzEwTExSZ05DK0p5azdYSEpjYmx4eVhHNHZMMlpzWlhOb2EyRmNjbHh1YkdWMElHWnNaWE5vYTJFOWNISnZiWEIwS0NmUW85QzYwTERRdHRDNDBZTFF0U0RRdnRDeDBZclJrZEM4SU5HRTBMdlF0ZEdJMExyUXVDRFFzaURRazlDeEp5azdYSEpjYm14bGRDQnJiMjUyWlhKMFRXSTlabXhsYzJocllTb3hNREkwTzF4eVhHNWpiMjV6ZENCbWFXeGxQVGd5TUR0Y2NseHViR1YwSUdOdmJHbGphR1Z6ZEhadlBVMWhkR2d1ZEhKMWJtTW9hMjl1ZG1WeWRFMWlMMlpwYkdVcE8xeHlYRzVoYkdWeWRDZ24wSjNRc0NEUmhOQzcwTFhSaU5DNjBZTWcwTC9RdnRDODBMWFJnZEdDMExqUmd0R00wWUhSanljclhDSWdYQ0lnSzJOdmJHbGphR1Z6ZEhadksxd2lJRndpS3lmUmhOQ3cwTG5RdTlDd0tOQyswTElwSnlrN1hISmNibHh5WEc1Y2NseHVMeTl6YUc5cmIyeGhaRnh5WEc1c1pYUWdZMkZ6YUdWc1BYQnliMjF3ZENnbjBKTFFzdEMxMExUUXVOR0MwTFVnMFlIUmc5QzgwTHpSZ3lEUXROQzEwTDNRdGRDeklOQ3lJTkM2MEw3UmlOQzEwTHZSak5DNjBMVW5LVHRjY2x4dWJHVjBJSEJ5YVdObFBYQnliMjF3ZENnbjBKTFFzdEMxMExUUXVOR0MwTFVnMFliUXRkQzkwWU1nMFlqUXZ0QzYwTDdRdTlDdzBMVFF1dEM0SnlrN1hISmNibXhsZENCcmIydzlUV0YwYUM1MGNuVnVZeWhqWVhOb1pXd3ZjSEpwWTJVcE8xeHlYRzVzWlhRZ2JHRnpkRU5oYzJnOVkyRnphR1ZzSlhCeWFXTmxPMXh5WEc1aGJHVnlkQ2duMEpUUXRkQzkwTFhRc3lEUmhkQ3kwTERSZ3RDNDBZSWcwTDNRc0NjclhDSWdYQ0lnSzJ0dmJDdGNJaUJjSWlzbjBZalF2dEM2MEw3UXU5Q3cwTFRRdXRDNExDRFF2dEdCMFlMUXNOR0MwTDdRdWljclhDSWdYQ0lnSzJ4aGMzUkRZWE5vS1R0Y2NseHVYSEpjYmk4dlkyOXVkbVZ5ZEZ4eVhHNXNaWFFnWVQxd2NtOXRjSFFvSjlDUzBMTFF0ZEMwMExqUmd0QzFJTkdIMExqUmdkQzcwTDRuS1R0Y2NseHVZV3hsY25Rb0tDY25JQ3NnWVNrdWMzQnNhWFFvSnljcExuSmxkbVZ5YzJVb0tTNXFiMmx1S0NjbktTazdYSEpjYmx4eVhHNHZMMlJsY0c5emFYUmNjbHh1YkdWMElIWnJiR0ZrUFhCeWIyMXdkQ2duMEpMUXN0QzEwTFRRdU5HQzBMVWcwWUhSZzlDODBMelJneURRc3RDNjBMdlFzTkMwMExBbktUdGNjbHh1WTI5dWMzUWdjSEp2WTJWdWREMDFMekV5TzF4eVhHNXNaWFFnYzNWdFlUMG9kbXRzWVdRcWNISnZZMlZ1ZENrdk1UQXdLakk3WEhKY2JtRnNaWEowS0NmUW9kR0QwTHpRdk5Dd0lOQzkwTERSaDlDNDBZSFF1OUMxMEwzUXZkR0wwWVVnMEwvUmdOQyswWWJRdGRDOTBZTFF2dEN5Snl0Y0lpQmNJaUFyYzNWdFlTazdYSEpjYmlKZGZRPT0ifQ==
