(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

// let age=prompt('Введите ваш возраст?');
// switch (true) {
// 	case (age>=0 && age<=2):
// 	alert('Вы ребёнок');
// 	break;
// 	case (age>=2 && age<=12):
// 	alert('Вы ребёнок от 2 до 12лет');
// 	break;
// 	case (age>=12 && age<=18):
// 	alert('Вы подросток');
// 	break;
// 	case (age>=18 && age<=60):
// 	alert('Вы взрослый');
// 	break;
// 	case (age>=60):
// 	alert('Вы пенсионер');
// 	break;
// }
// let number=prompt('Введите число от 0 до 9');
// switch  (true) {
// 	case number == 0:
// 	alert(')');
// 	break;
// 	case number == 1:
// 	alert('!');
// 	break;
// 	case number == 2:
// 	alert('@');
// 	break;
// 	case number == 3:
// 	alert('#');
// 	break;
// 	case number == 4:
// 	alert('$');
// 	break;
// 	case number == 5:
// 	alert('%');
// 	break;
// 	case number == 6:
// 	alert('^');
// 	break;
// 	case number == 7:
// 	alert('&');
// 	break;
// 	case number == 8:
// 	alert('*');
// 	break;
// 	case number == 9:
// 	alert('(');
// 	break;
// }
// function isPalindrome(str) {
//    var strLen = str.length,
//        strReverse = str.split('').reverse().join(''); //Разбиваем строку посимвольно  и превращаем ее в массив с помощью split(''), потом применяем к нему метод reverse() и собираем все символы в строку с помощью join('')
//    if (strReverse == str) {
//      return 'yes';
//    } else {
//      return 'no';
//    }
//  }
//  test = isPalindrome('abcdedcba');
//  test2 = isPalindrome('abcded');
//  console.log(test);
//  console.log(test2);
//  document.write('isPalindrome result: ' + 'str - ' + test + ' str2 - ' + test2);
// 0 - 12 - baby
// 13 - 18 - teen
// 19 - 60 - adult
// 61 - 100 - pens
// DOM
console.log('string' + 'uppercase'); // String - 'string' + 1 // '2' + 2 = '22' // '2' - 2 = 0 //
// Number - 
// Boolean - true / false
// Undefined
// Object
// Function

var form = document.querySelector('.form');
var answer = document.querySelector('.answer');

function handelSubmit(event) {
  event.preventDefault();
  var data = {};

  for (var i = 0; i < form.elements.length; i++) {
    if (form.elements[i].name === 'submit') {
      continue;
    }

    data[form.elements[i].name] = form.elements[i].value;
  } // Array.from(form.elements).forEach(el => {
  //  if (el.name !== 'submit') return data[el.name] = el.value;
  // });


  function getStatus(age) {
    if (age < 0 || age > 150) {
      return 'Incorrect value';
    }

    if (age > 0 && age <= 12) {
      return 'baby';
    } else if (age >= 13 && age <= 18) {
      return 'teen';
    } else if (age >= 19 && age <= 60) {
      return 'adult';
    } else {
      return 'pens';
    }
  }

  answer.innerText = "".concat(data.name, " ").concat(data.secname, " is ").concat(getStatus(+data.age));
}

form.addEventListener('submit', handelSubmit);
var palindromForm = document.createElement('form');
palindromForm.classList.add('palindrom-form');
document.body.appendChild(palindromForm);
var palindromInput = document.createElement('input');
var palindromSubmit = document.createElement('input');
var palindromAnswer = document.createElement('p');
palindromAnswer.classList.add('palindrom-form__answer');
palindromInput.setAttribute('name', 'number');
palindromInput.classList.add('palindrom-form__input');
palindromSubmit.setAttribute('type', 'submit');
palindromSubmit.classList.add('palindrom-form__submit');
palindromSubmit.setAttribute('value', 'Submit');
palindromForm.appendChild(palindromInput);
palindromForm.appendChild(palindromSubmit);
palindromForm.appendChild(palindromAnswer);
palindromForm.addEventListener('submit', function (event) {
  event.preventDefault();

  if (palindromInput.value.length !== 5) {
    palindromAnswer.innerText = 'Введите пятизначное число';
    return;
  }

  var isPalindrom = palindromInput.value.split('').reverse().join('') === palindromInput.value; //palindromAnswer.innerText = isPalindrom ? 'Палиндром' : 'Не палиндром';
  // if (isPalindrom === true) {
  //  palindromAnswer.innerText = 'Палиндром';
  // } else if (isPalindrom === false) {
  //  palindromAnswer.innerText = 'Не палиндром';
  // }

  if (isPalindrom) {
    palindromAnswer.innerText = 'Палиндром';
  } else {
    palindromAnswer.innerText = 'Не палиндром';
  }
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy9wZXNvY2huaWNhSlMvc3JjL2pzL2FwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUlBO0FBQ0Q7QUFDQTtBQUNBO0FBRUE7QUFFQSxPQUFPLENBQUMsR0FBUixDQUFZLFdBQVcsV0FBdkIsRSxDQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNLElBQUksR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixPQUF2QixDQUFiO0FBQ0EsSUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsU0FBdkIsQ0FBZjs7QUFFQSxTQUFTLFlBQVQsQ0FBc0IsS0FBdEIsRUFBNkI7QUFDM0IsRUFBQSxLQUFLLENBQUMsY0FBTjtBQUVBLE1BQU0sSUFBSSxHQUFHLEVBQWI7O0FBRUEsT0FBSSxJQUFJLENBQUMsR0FBRyxDQUFaLEVBQWUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFMLENBQWMsTUFBakMsRUFBeUMsQ0FBQyxFQUExQyxFQUE4QztBQUM1QyxRQUFJLElBQUksQ0FBQyxRQUFMLENBQWMsQ0FBZCxFQUFpQixJQUFqQixLQUEwQixRQUE5QixFQUF3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Y0FBNUI7QUFDRDtBQUdGLENBekJEIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCIvLyBsZXQgYWdlPXByb21wdCgn0JLQstC10LTQuNGC0LUg0LLQsNGIINCy0L7Qt9GA0LDRgdGCPycpO1xyXG4vLyBzd2l0Y2ggKHRydWUpIHtcclxuXHJcbi8vIFx0Y2FzZSAoYWdlPj0wICYmIGFnZTw9Mik6XHJcbi8vIFx0YWxlcnQoJ9CS0Ysg0YDQtdCx0ZHQvdC+0LonKTtcclxuLy8gXHRicmVhaztcclxuXHJcbi8vIFx0Y2FzZSAoYWdlPj0yICYmIGFnZTw9MTIpOlxyXG4vLyBcdGFsZXJ0KCfQktGLINGA0LXQsdGR0L3QvtC6INC+0YIgMiDQtNC+IDEy0LvQtdGCJyk7XHJcbi8vIFx0YnJlYWs7XHJcblxyXG4vLyBcdGNhc2UgKGFnZT49MTIgJiYgYWdlPD0xOCk6XHJcbi8vIFx0YWxlcnQoJ9CS0Ysg0L/QvtC00YDQvtGB0YLQvtC6Jyk7XHJcbi8vIFx0YnJlYWs7XHJcblxyXG4vLyBcdGNhc2UgKGFnZT49MTggJiYgYWdlPD02MCk6XHJcbi8vIFx0YWxlcnQoJ9CS0Ysg0LLQt9GA0L7RgdC70YvQuScpO1xyXG4vLyBcdGJyZWFrO1xyXG5cclxuLy8gXHRjYXNlIChhZ2U+PTYwKTpcclxuLy8gXHRhbGVydCgn0JLRiyDQv9C10L3RgdC40L7QvdC10YAnKTtcclxuLy8gXHRicmVhaztcclxuLy8gfVxyXG5cclxuLy8gbGV0IG51bWJlcj1wcm9tcHQoJ9CS0LLQtdC00LjRgtC1INGH0LjRgdC70L4g0L7RgiAwINC00L4gOScpO1xyXG4vLyBzd2l0Y2ggICh0cnVlKSB7XHJcbi8vIFx0Y2FzZSBudW1iZXIgPT0gMDpcclxuLy8gXHRhbGVydCgnKScpO1xyXG4vLyBcdGJyZWFrO1xyXG4vLyBcdGNhc2UgbnVtYmVyID09IDE6XHJcbi8vIFx0YWxlcnQoJyEnKTtcclxuLy8gXHRicmVhaztcclxuLy8gXHRjYXNlIG51bWJlciA9PSAyOlxyXG4vLyBcdGFsZXJ0KCdAJyk7XHJcbi8vIFx0YnJlYWs7XHJcbi8vIFx0Y2FzZSBudW1iZXIgPT0gMzpcclxuLy8gXHRhbGVydCgnIycpO1xyXG4vLyBcdGJyZWFrO1xyXG4vLyBcdGNhc2UgbnVtYmVyID09IDQ6XHJcbi8vIFx0YWxlcnQoJyQnKTtcclxuLy8gXHRicmVhaztcclxuLy8gXHRjYXNlIG51bWJlciA9PSA1OlxyXG4vLyBcdGFsZXJ0KCclJyk7XHJcbi8vIFx0YnJlYWs7XHJcbi8vIFx0Y2FzZSBudW1iZXIgPT0gNjpcclxuLy8gXHRhbGVydCgnXicpO1xyXG4vLyBcdGJyZWFrO1xyXG4vLyBcdGNhc2UgbnVtYmVyID09IDc6XHJcbi8vIFx0YWxlcnQoJyYnKTtcclxuLy8gXHRicmVhaztcclxuLy8gXHRjYXNlIG51bWJlciA9PSA4OlxyXG4vLyBcdGFsZXJ0KCcqJyk7XHJcbi8vIFx0YnJlYWs7XHJcbi8vIFx0Y2FzZSBudW1iZXIgPT0gOTpcclxuLy8gXHRhbGVydCgnKCcpO1xyXG4vLyBcdGJyZWFrO1xyXG4vLyB9XHJcblxyXG5cclxuIC8vIGZ1bmN0aW9uIGlzUGFsaW5kcm9tZShzdHIpIHtcclxuIC8vICAgIHZhciBzdHJMZW4gPSBzdHIubGVuZ3RoLFxyXG4gLy8gICAgICAgIHN0clJldmVyc2UgPSBzdHIuc3BsaXQoJycpLnJldmVyc2UoKS5qb2luKCcnKTsgLy/QoNCw0LfQsdC40LLQsNC10Lwg0YHRgtGA0L7QutGDINC/0L7RgdC40LzQstC+0LvRjNC90L4gINC4INC/0YDQtdCy0YDQsNGJ0LDQtdC8INC10LUg0LIg0LzQsNGB0YHQuNCyINGBINC/0L7QvNC+0YnRjNGOIHNwbGl0KCcnKSwg0L/QvtGC0L7QvCDQv9GA0LjQvNC10L3Rj9C10Lwg0Log0L3QtdC80YMg0LzQtdGC0L7QtCByZXZlcnNlKCkg0Lgg0YHQvtCx0LjRgNCw0LXQvCDQstGB0LUg0YHQuNC80LLQvtC70Ysg0LIg0YHRgtGA0L7QutGDINGBINC/0L7QvNC+0YnRjNGOIGpvaW4oJycpXHJcbiAvLyAgICBpZiAoc3RyUmV2ZXJzZSA9PSBzdHIpIHtcclxuIC8vICAgICAgcmV0dXJuICd5ZXMnO1xyXG4gLy8gICAgfSBlbHNlIHtcclxuIC8vICAgICAgcmV0dXJuICdubyc7XHJcbiAvLyAgICB9XHJcbiAvLyAgfVxyXG5cclxuIC8vICB0ZXN0ID0gaXNQYWxpbmRyb21lKCdhYmNkZWRjYmEnKTtcclxuIC8vICB0ZXN0MiA9IGlzUGFsaW5kcm9tZSgnYWJjZGVkJyk7XHJcblxyXG4gLy8gIGNvbnNvbGUubG9nKHRlc3QpO1xyXG4gLy8gIGNvbnNvbGUubG9nKHRlc3QyKTtcclxuIC8vICBkb2N1bWVudC53cml0ZSgnaXNQYWxpbmRyb21lIHJlc3VsdDogJyArICdzdHIgLSAnICsgdGVzdCArICcgc3RyMiAtICcgKyB0ZXN0Mik7XHJcblxyXG5cclxuXHJcbiAvLyAwIC0gMTIgLSBiYWJ5XHJcbi8vIDEzIC0gMTggLSB0ZWVuXHJcbi8vIDE5IC0gNjAgLSBhZHVsdFxyXG4vLyA2MSAtIDEwMCAtIHBlbnNcclxuXHJcbi8vIERPTVxyXG5cclxuY29uc29sZS5sb2coJ3N0cmluZycgKyAndXBwZXJjYXNlJyk7XHJcblxyXG4vLyBTdHJpbmcgLSAnc3RyaW5nJyArIDEgLy8gJzInICsgMiA9ICcyMicgLy8gJzInIC0gMiA9IDAgLy9cclxuLy8gTnVtYmVyIC0gXHJcbi8vIEJvb2xlYW4gLSB0cnVlIC8gZmFsc2VcclxuLy8gVW5kZWZpbmVkXHJcbi8vIE9iamVjdFxyXG4vLyBGdW5jdGlvblxyXG5cclxuY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XHJcbmNvbnN0IGFuc3dlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbnN3ZXInKTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRlbFN1Ym1pdChldmVudCkge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gIGNvbnN0IGRhdGEgPSB7fTtcclxuXHJcbiAgZm9yKGxldCBpID0gMDsgaSA8IGZvcm0uZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcclxuICAgIGlmIChmb3JtLmVsZW1lbnRzW2ldLm5hbWUgPT09ICdzdWJtaXQnKSB7XHJcbiAgICAgIGNvbnRpbnVlO1xyXG4gICAgfVxyXG4gICAgZGF0YVtmb3JtLmVsZW1lbnRzW2ldLm5hbWVdID0gZm9ybS5lbGVtZW50c1tpXS52YWx1ZTtcclxuICB9XHJcblxyXG4gIC8vIEFycmF5LmZyb20oZm9ybS5lbGVtZW50cykuZm9yRWFjaChlbCA9PiB7XHJcbiAgLy8gIGlmIChlbC5uYW1lICE9PSAnc3VibWl0JykgcmV0dXJuIGRhdGFbZWwubmFtZV0gPSBlbC52YWx1ZTtcclxuICAvLyB9KTtcclxuXHJcbiAgZnVuY3Rpb24gZ2V0U3RhdHVzKGFnZSkge1xyXG5cclxuICAgIGlmIChhZ2UgPCAwIHx8ICBhZ2UgPiAxNTApIHtcclxuICAgICAgcmV0dXJuICdJbmNvcnJlY3QgdmFsdWUnO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChhZ2UgPiAwICYmIGFnZSA8PSAxMikge1xyXG4gICAgICByZXR1cm4gJ2JhYnknO1xyXG4gICAgfSBlbHNlIGlmIChhZ2UgPj0gMTMgJiYgYWdlIDw9IDE4KSB7XHJcbiAgICAgIHJldHVybiAndGVlbic7XHJcbiAgICB9IGVsc2UgaWYgKGFnZSA+PSAxOSAmJiBhZ2UgPD0gNjApIHtcclxuICAgICAgcmV0dXJuICdhZHVsdCc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gJ3BlbnMnO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYW5zd2VyLmlubmVyVGV4dCA9IGAke2RhdGEubmFtZX0gJHtkYXRhLnNlY25hbWV9IGlzICR7Z2V0U3RhdHVzKCtkYXRhLmFnZSl9YDtcclxufVxyXG5cclxuZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBoYW5kZWxTdWJtaXQpO1xyXG5cclxuXHJcbmNvbnN0IHBhbGluZHJvbUZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XHJcbnBhbGluZHJvbUZvcm0uY2xhc3NMaXN0LmFkZCgncGFsaW5kcm9tLWZvcm0nKTtcclxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwYWxpbmRyb21Gb3JtKTtcclxuXHJcbmNvbnN0IHBhbGluZHJvbUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuY29uc3QgcGFsaW5kcm9tU3VibWl0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuY29uc3QgcGFsaW5kcm9tQW5zd2VyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG5wYWxpbmRyb21BbnN3ZXIuY2xhc3NMaXN0LmFkZCgncGFsaW5kcm9tLWZvcm1fX2Fuc3dlcicpO1xyXG5wYWxpbmRyb21JbnB1dC5zZXRBdHRyaWJ1dGUoJ25hbWUnLCAnbnVtYmVyJyk7XHJcbnBhbGluZHJvbUlucHV0LmNsYXNzTGlzdC5hZGQoJ3BhbGluZHJvbS1mb3JtX19pbnB1dCcpO1xyXG5wYWxpbmRyb21TdWJtaXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3N1Ym1pdCcpO1xyXG5wYWxpbmRyb21TdWJtaXQuY2xhc3NMaXN0LmFkZCgncGFsaW5kcm9tLWZvcm1fX3N1Ym1pdCcpO1xyXG5wYWxpbmRyb21TdWJtaXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdTdWJtaXQnKTtcclxucGFsaW5kcm9tRm9ybS5hcHBlbmRDaGlsZChwYWxpbmRyb21JbnB1dCk7XHJcbnBhbGluZHJvbUZvcm0uYXBwZW5kQ2hpbGQocGFsaW5kcm9tU3VibWl0KTtcclxucGFsaW5kcm9tRm9ybS5hcHBlbmRDaGlsZChwYWxpbmRyb21BbnN3ZXIpO1xyXG5cclxucGFsaW5kcm9tRm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBmdW5jdGlvbihldmVudCkge1xyXG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gIGlmIChwYWxpbmRyb21JbnB1dC52YWx1ZS5sZW5ndGggIT09IDUpIHtcclxuICAgIHBhbGluZHJvbUFuc3dlci5pbm5lclRleHQgPSAn0JLQstC10LTQuNGC0LUg0L/Rj9GC0LjQt9C90LDRh9C90L7QtSDRh9C40YHQu9C+JztcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIGNvbnN0IGlzUGFsaW5kcm9tID0gcGFsaW5kcm9tSW5wdXQudmFsdWUuc3BsaXQoJycpLnJldmVyc2UoKS5qb2luKCcnKSA9PT0gcGFsaW5kcm9tSW5wdXQudmFsdWU7XHJcblxyXG4gIC8vcGFsaW5kcm9tQW5zd2VyLmlubmVyVGV4dCA9IGlzUGFsaW5kcm9tID8gJ9Cf0LDQu9C40L3QtNGA0L7QvCcgOiAn0J3QtSDQv9Cw0LvQuNC90LTRgNC+0LwnO1xyXG5cclxuICAvLyBpZiAoaXNQYWxpbmRyb20gPT09IHRydWUpIHtcclxuICAvLyAgcGFsaW5kcm9tQW5zd2VyLmlubmVyVGV4dCA9ICfQn9Cw0LvQuNC90LTRgNC+0LwnO1xyXG4gIC8vIH0gZWxzZSBpZiAoaXNQYWxpbmRyb20gPT09IGZhbHNlKSB7XHJcbiAgLy8gIHBhbGluZHJvbUFuc3dlci5pbm5lclRleHQgPSAn0J3QtSDQv9Cw0LvQuNC90LTRgNC+0LwnO1xyXG4gIC8vIH1cclxuXHJcbiAgaWYgKGlzUGFsaW5kcm9tKSB7XHJcbiAgICBwYWxpbmRyb21BbnN3ZXIuaW5uZXJUZXh0ID0gJ9Cf0LDQu9C40L3QtNGA0L7QvCc7XHJcbiAgfSBlbHNlIHtcclxuICAgIHBhbGluZHJvbUFuc3dlci5pbm5lclRleHQgPSAn0J3QtSDQv9Cw0LvQuNC90LTRgNC+0LwnO1xyXG4gIH1cclxuXHJcblxyXG59KTsiXSwicHJlRXhpc3RpbmdDb21tZW50IjoiLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW01dlpHVmZiVzlrZFd4bGN5OWljbTkzYzJWeUxYQmhZMnN2WDNCeVpXeDFaR1V1YW5NaUxDSndjbTlxWldOMGN5OXdaWE52WTJodWFXTmhTbE12YzNKakwycHpMMkZ3Y0M1cWN5SmRMQ0p1WVcxbGN5STZXMTBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHM3TzBGRFFVRTdRVUZEUVR0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJSME03UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJSVUU3UVVGRFFUdEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVbEJPMEZCUTBRN1FVRkRRVHRCUVVOQk8wRkJSVUU3UVVGRlFTeFBRVUZQTEVOQlFVTXNSMEZCVWl4RFFVRlpMRmRCUVZjc1YwRkJka0lzUlN4RFFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUczdRVUZGUVN4SlFVRk5MRWxCUVVrc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQlZDeERRVUYxUWl4UFFVRjJRaXhEUVVGaU8wRkJRMEVzU1VGQlRTeE5RVUZOTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVZRc1EwRkJkVUlzVTBGQmRrSXNRMEZCWmpzN1FVRkZRU3hUUVVGVExGbEJRVlFzUTBGQmMwSXNTMEZCZEVJc1JVRkJOa0k3UVVGRE0wSXNSVUZCUVN4TFFVRkxMRU5CUVVNc1kwRkJUanRCUVVWQkxFMUJRVTBzU1VGQlNTeEhRVUZITEVWQlFXSTdPMEZCUlVFc1QwRkJTU3hKUVVGSkxFTkJRVU1zUjBGQlJ5eERRVUZhTEVWQlFXVXNRMEZCUXl4SFFVRkhMRWxCUVVrc1EwRkJReXhSUVVGTUxFTkJRV01zVFVGQmFrTXNSVUZCZVVNc1EwRkJReXhGUVVFeFF5eEZRVUU0UXp0QlFVTTFReXhSUVVGSkxFbEJRVWtzUTBGQlF5eFJRVUZNTEVOQlFXTXNRMEZCWkN4RlFVRnBRaXhKUVVGcVFpeExRVUV3UWl4UlFVRTVRaXhGUVVGM1F6dEJRVU4wUXp0QlFVTkVPenRCUVVORUxFbEJRVUVzU1VGQlNTeERRVUZETEVsQlFVa3NRMEZCUXl4UlFVRk1MRU5CUVdNc1EwRkJaQ3hGUVVGcFFpeEpRVUZzUWl4RFFVRktMRWRCUVRoQ0xFbEJRVWtzUTBGQlF5eFJRVUZNTEVOQlFXTXNRMEZCWkN4RlFVRnBRaXhMUVVFdlF6dEJRVU5FTEVkQlZqQkNMRU5CV1ROQ08wRkJRMEU3UVVGRFFUczdPMEZCUlVFc1YwRkJVeXhUUVVGVUxFTkJRVzFDTEVkQlFXNUNMRVZCUVhkQ08wRkJSWFJDTEZGQlFVa3NSMEZCUnl4SFFVRkhMRU5CUVU0c1NVRkJXU3hIUVVGSExFZEJRVWNzUjBGQmRFSXNSVUZCTWtJN1FVRkRla0lzWVVGQlR5eHBRa0ZCVUR0QlFVTkVPenRCUVVWRUxGRkJRVWtzUjBGQlJ5eEhRVUZITEVOQlFVNHNTVUZCVnl4SFFVRkhMRWxCUVVrc1JVRkJkRUlzUlVGQk1FSTdRVUZEZUVJc1lVRkJUeXhOUVVGUU8wRkJRMFFzUzBGR1JDeE5RVVZQTEVsQlFVa3NSMEZCUnl4SlFVRkpMRVZCUVZBc1NVRkJZU3hIUVVGSExFbEJRVWtzUlVGQmVFSXNSVUZCTkVJN1FVRkRha01zWVVGQlR5eE5RVUZRTzBGQlEwUXNTMEZHVFN4TlFVVkJMRWxCUVVrc1IwRkJSeXhKUVVGSkxFVkJRVkFzU1VGQllTeEhRVUZITEVsQlFVa3NSVUZCZUVJc1JVRkJORUk3UVVGRGFrTXNZVUZCVHl4UFFVRlFPMEZCUTBRc1MwRkdUU3hOUVVWQk8wRkJRMHdzWVVGQlR5eE5RVUZRTzBGQlEwUTdRVUZEUmpzN1FVRkZSQ3hGUVVGQkxFMUJRVTBzUTBGQlF5eFRRVUZRTEdGQlFYTkNMRWxCUVVrc1EwRkJReXhKUVVFelFpeGpRVUZ0UXl4SlFVRkpMRU5CUVVNc1QwRkJlRU1zYVVKQlFYTkVMRk5CUVZNc1EwRkJReXhEUVVGRExFbEJRVWtzUTBGQlF5eEhRVUZRTEVOQlFTOUVPMEZCUTBRN08wRkJSVVFzU1VGQlNTeERRVUZETEdkQ1FVRk1MRU5CUVhOQ0xGRkJRWFJDTEVWQlFXZERMRmxCUVdoRE8wRkJSMEVzU1VGQlRTeGhRVUZoTEVkQlFVY3NVVUZCVVN4RFFVRkRMR0ZCUVZRc1EwRkJkVUlzVFVGQmRrSXNRMEZCZEVJN1FVRkRRU3hoUVVGaExFTkJRVU1zVTBGQlpDeERRVUYzUWl4SFFVRjRRaXhEUVVFMFFpeG5Ra0ZCTlVJN1FVRkRRU3hSUVVGUkxFTkJRVU1zU1VGQlZDeERRVUZqTEZkQlFXUXNRMEZCTUVJc1lVRkJNVUk3UVVGRlFTeEpRVUZOTEdOQlFXTXNSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJWQ3hEUVVGMVFpeFBRVUYyUWl4RFFVRjJRanRCUVVOQkxFbEJRVTBzWlVGQlpTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xFOUJRWFpDTEVOQlFYaENPMEZCUTBFc1NVRkJUU3hsUVVGbExFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFWUXNRMEZCZFVJc1IwRkJka0lzUTBGQmVFSTdRVUZEUVN4bFFVRmxMRU5CUVVNc1UwRkJhRUlzUTBGQk1FSXNSMEZCTVVJc1EwRkJPRUlzZDBKQlFUbENPMEZCUTBFc1kwRkJZeXhEUVVGRExGbEJRV1lzUTBGQk5FSXNUVUZCTlVJc1JVRkJiME1zVVVGQmNFTTdRVUZEUVN4alFVRmpMRU5CUVVNc1UwRkJaaXhEUVVGNVFpeEhRVUY2UWl4RFFVRTJRaXgxUWtGQk4wSTdRVUZEUVN4bFFVRmxMRU5CUVVNc1dVRkJhRUlzUTBGQk5rSXNUVUZCTjBJc1JVRkJjVU1zVVVGQmNrTTdRVUZEUVN4bFFVRmxMRU5CUVVNc1UwRkJhRUlzUTBGQk1FSXNSMEZCTVVJc1EwRkJPRUlzZDBKQlFUbENPMEZCUTBFc1pVRkJaU3hEUVVGRExGbEJRV2hDTEVOQlFUWkNMRTlCUVRkQ0xFVkJRWE5ETEZGQlFYUkRPMEZCUTBFc1lVRkJZU3hEUVVGRExGZEJRV1FzUTBGQk1FSXNZMEZCTVVJN1FVRkRRU3hoUVVGaExFTkJRVU1zVjBGQlpDeERRVUV3UWl4bFFVRXhRanRCUVVOQkxHRkJRV0VzUTBGQlF5eFhRVUZrTEVOQlFUQkNMR1ZCUVRGQ08wRkJSVUVzWVVGQllTeERRVUZETEdkQ1FVRmtMRU5CUVN0Q0xGRkJRUzlDTEVWQlFYbERMRlZCUVZNc1MwRkJWQ3hGUVVGblFqdEJRVU4yUkN4RlFVRkJMRXRCUVVzc1EwRkJReXhqUVVGT096dEJRVVZCTEUxQlFVa3NZMEZCWXl4RFFVRkRMRXRCUVdZc1EwRkJjVUlzVFVGQmNrSXNTMEZCWjBNc1EwRkJjRU1zUlVGQmRVTTdRVUZEY2tNc1NVRkJRU3hsUVVGbExFTkJRVU1zVTBGQmFFSXNSMEZCTkVJc01rSkJRVFZDTzBGQlEwRTdRVUZEUkRzN1FVRkZSQ3hOUVVGTkxGZEJRVmNzUjBGQlJ5eGpRVUZqTEVOQlFVTXNTMEZCWml4RFFVRnhRaXhMUVVGeVFpeERRVUV5UWl4RlFVRXpRaXhGUVVFclFpeFBRVUV2UWl4SFFVRjVReXhKUVVGNlF5eERRVUU0UXl4RlFVRTVReXhOUVVGelJDeGpRVUZqTEVOQlFVTXNTMEZCZWtZc1EwRlNkVVFzUTBGVmRrUTdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk96dEJRVVZCTEUxQlFVa3NWMEZCU2l4RlFVRnBRanRCUVVObUxFbEJRVUVzWlVGQlpTeERRVUZETEZOQlFXaENMRWRCUVRSQ0xGZEJRVFZDTzBGQlEwUXNSMEZHUkN4TlFVVlBPMEZCUTB3c1NVRkJRU3hsUVVGbExFTkJRVU1zVTBGQmFFSXNSMEZCTkVJc1kwRkJOVUk3UVVGRFJEdEJRVWRHTEVOQmVrSkVJaXdpWm1sc1pTSTZJbWRsYm1WeVlYUmxaQzVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJb1puVnVZM1JwYjI0b0tYdG1kVzVqZEdsdmJpQnlLR1VzYml4MEtYdG1kVzVqZEdsdmJpQnZLR2tzWmlsN2FXWW9JVzViYVYwcGUybG1LQ0ZsVzJsZEtYdDJZWElnWXoxY0ltWjFibU4wYVc5dVhDSTlQWFI1Y0dWdlppQnlaWEYxYVhKbEppWnlaWEYxYVhKbE8ybG1LQ0ZtSmlaaktYSmxkSFZ5YmlCaktHa3NJVEFwTzJsbUtIVXBjbVYwZFhKdUlIVW9hU3doTUNrN2RtRnlJR0U5Ym1WM0lFVnljbTl5S0Z3aVEyRnVibTkwSUdacGJtUWdiVzlrZFd4bElDZGNJaXRwSzF3aUoxd2lLVHQwYUhKdmR5QmhMbU52WkdVOVhDSk5UMFJWVEVWZlRrOVVYMFpQVlU1RVhDSXNZWDEyWVhJZ2NEMXVXMmxkUFh0bGVIQnZjblJ6T250OWZUdGxXMmxkV3pCZExtTmhiR3dvY0M1bGVIQnZjblJ6TEdaMWJtTjBhVzl1S0hJcGUzWmhjaUJ1UFdWYmFWMWJNVjFiY2wwN2NtVjBkWEp1SUc4b2JueDhjaWw5TEhBc2NDNWxlSEJ2Y25SekxISXNaU3h1TEhRcGZYSmxkSFZ5YmlCdVcybGRMbVY0Y0c5eWRITjlabTl5S0haaGNpQjFQVndpWm5WdVkzUnBiMjVjSWowOWRIbHdaVzltSUhKbGNYVnBjbVVtSm5KbGNYVnBjbVVzYVQwd08yazhkQzVzWlc1bmRHZzdhU3NyS1c4b2RGdHBYU2s3Y21WMGRYSnVJRzk5Y21WMGRYSnVJSEo5S1NncElpd2lMeThnYkdWMElHRm5aVDF3Y205dGNIUW9KOUNTMExMUXRkQzAwTGpSZ3RDMUlOQ3kwTERSaUNEUXN0QyswTGZSZ05DdzBZSFJnajhuS1R0Y2NseHVMeThnYzNkcGRHTm9JQ2gwY25WbEtTQjdYSEpjYmx4eVhHNHZMeUJjZEdOaGMyVWdLR0ZuWlQ0OU1DQW1KaUJoWjJVOFBUSXBPbHh5WEc0dkx5QmNkR0ZzWlhKMEtDZlFrdEdMSU5HQTBMWFFzZEdSMEwzUXZ0QzZKeWs3WEhKY2JpOHZJRngwWW5KbFlXczdYSEpjYmx4eVhHNHZMeUJjZEdOaGMyVWdLR0ZuWlQ0OU1pQW1KaUJoWjJVOFBURXlLVHBjY2x4dUx5OGdYSFJoYkdWeWRDZ24wSkxSaXlEUmdOQzEwTEhSa2RDOTBMN1F1aURRdnRHQ0lESWcwTFRRdmlBeE10QzcwTFhSZ2ljcE8xeHlYRzR2THlCY2RHSnlaV0ZyTzF4eVhHNWNjbHh1THk4Z1hIUmpZWE5sSUNoaFoyVStQVEV5SUNZbUlHRm5aVHc5TVRncE9seHlYRzR2THlCY2RHRnNaWEowS0NmUWt0R0xJTkMvMEw3UXROR0EwTDdSZ2RHQzBMN1F1aWNwTzF4eVhHNHZMeUJjZEdKeVpXRnJPMXh5WEc1Y2NseHVMeThnWEhSallYTmxJQ2hoWjJVK1BURTRJQ1ltSUdGblpUdzlOakFwT2x4eVhHNHZMeUJjZEdGc1pYSjBLQ2ZRa3RHTElOQ3kwTGZSZ05DKzBZSFF1OUdMMExrbktUdGNjbHh1THk4Z1hIUmljbVZoYXp0Y2NseHVYSEpjYmk4dklGeDBZMkZ6WlNBb1lXZGxQajAyTUNrNlhISmNiaTh2SUZ4MFlXeGxjblFvSjlDUzBZc2cwTC9RdGRDOTBZSFF1TkMrMEwzUXRkR0FKeWs3WEhKY2JpOHZJRngwWW5KbFlXczdYSEpjYmk4dklIMWNjbHh1WEhKY2JpOHZJR3hsZENCdWRXMWlaWEk5Y0hKdmJYQjBLQ2ZRa3RDeTBMWFF0TkM0MFlMUXRTRFJoOUM0MFlIUXU5QytJTkMrMFlJZ01DRFF0TkMrSURrbktUdGNjbHh1THk4Z2MzZHBkR05vSUNBb2RISjFaU2tnZTF4eVhHNHZMeUJjZEdOaGMyVWdiblZ0WW1WeUlEMDlJREE2WEhKY2JpOHZJRngwWVd4bGNuUW9KeWtuS1R0Y2NseHVMeThnWEhSaWNtVmhhenRjY2x4dUx5OGdYSFJqWVhObElHNTFiV0psY2lBOVBTQXhPbHh5WEc0dkx5QmNkR0ZzWlhKMEtDY2hKeWs3WEhKY2JpOHZJRngwWW5KbFlXczdYSEpjYmk4dklGeDBZMkZ6WlNCdWRXMWlaWElnUFQwZ01qcGNjbHh1THk4Z1hIUmhiR1Z5ZENnblFDY3BPMXh5WEc0dkx5QmNkR0p5WldGck8xeHlYRzR2THlCY2RHTmhjMlVnYm5WdFltVnlJRDA5SURNNlhISmNiaTh2SUZ4MFlXeGxjblFvSnlNbktUdGNjbHh1THk4Z1hIUmljbVZoYXp0Y2NseHVMeThnWEhSallYTmxJRzUxYldKbGNpQTlQU0EwT2x4eVhHNHZMeUJjZEdGc1pYSjBLQ2NrSnlrN1hISmNiaTh2SUZ4MFluSmxZV3M3WEhKY2JpOHZJRngwWTJGelpTQnVkVzFpWlhJZ1BUMGdOVHBjY2x4dUx5OGdYSFJoYkdWeWRDZ25KU2NwTzF4eVhHNHZMeUJjZEdKeVpXRnJPMXh5WEc0dkx5QmNkR05oYzJVZ2JuVnRZbVZ5SUQwOUlEWTZYSEpjYmk4dklGeDBZV3hsY25Rb0oxNG5LVHRjY2x4dUx5OGdYSFJpY21WaGF6dGNjbHh1THk4Z1hIUmpZWE5sSUc1MWJXSmxjaUE5UFNBM09seHlYRzR2THlCY2RHRnNaWEowS0NjbUp5azdYSEpjYmk4dklGeDBZbkpsWVdzN1hISmNiaTh2SUZ4MFkyRnpaU0J1ZFcxaVpYSWdQVDBnT0RwY2NseHVMeThnWEhSaGJHVnlkQ2duS2ljcE8xeHlYRzR2THlCY2RHSnlaV0ZyTzF4eVhHNHZMeUJjZEdOaGMyVWdiblZ0WW1WeUlEMDlJRGs2WEhKY2JpOHZJRngwWVd4bGNuUW9KeWduS1R0Y2NseHVMeThnWEhSaWNtVmhhenRjY2x4dUx5OGdmVnh5WEc1Y2NseHVYSEpjYmlBdkx5Qm1kVzVqZEdsdmJpQnBjMUJoYkdsdVpISnZiV1VvYzNSeUtTQjdYSEpjYmlBdkx5QWdJQ0IyWVhJZ2MzUnlUR1Z1SUQwZ2MzUnlMbXhsYm1kMGFDeGNjbHh1SUM4dklDQWdJQ0FnSUNCemRISlNaWFpsY25ObElEMGdjM1J5TG5Od2JHbDBLQ2NuS1M1eVpYWmxjbk5sS0NrdWFtOXBiaWduSnlrN0lDOHYwS0RRc05DMzBMSFF1TkN5MExEUXRkQzhJTkdCMFlMUmdOQyswTHJSZ3lEUXY5QyswWUhRdU5DODBMTFF2dEM3MFl6UXZkQytJQ0RRdUNEUXY5R0EwTFhRc3RHQTBMRFJpZEN3MExYUXZDRFF0ZEMxSU5DeUlOQzgwTERSZ2RHQjBMalFzaURSZ1NEUXY5QyswTHpRdnRHSjBZelJqaUJ6Y0d4cGRDZ25KeWtzSU5DLzBMN1JndEMrMEx3ZzBML1JnTkM0MEx6UXRkQzkwWS9RdGRDOElOQzZJTkM5MExYUXZOR0RJTkM4MExYUmd0QyswTFFnY21WMlpYSnpaU2dwSU5DNElOR0IwTDdRc2RDNDBZRFFzTkMxMEx3ZzBMTFJnZEMxSU5HQjBMalF2TkN5MEw3UXU5R0xJTkN5SU5HQjBZTFJnTkMrMExyUmd5RFJnU0RRdjlDKzBMelF2dEdKMFl6UmppQnFiMmx1S0NjbktWeHlYRzRnTHk4Z0lDQWdhV1lnS0hOMGNsSmxkbVZ5YzJVZ1BUMGdjM1J5S1NCN1hISmNiaUF2THlBZ0lDQWdJSEpsZEhWeWJpQW5lV1Z6Snp0Y2NseHVJQzh2SUNBZ0lIMGdaV3h6WlNCN1hISmNiaUF2THlBZ0lDQWdJSEpsZEhWeWJpQW5ibThuTzF4eVhHNGdMeThnSUNBZ2ZWeHlYRzRnTHk4Z0lIMWNjbHh1WEhKY2JpQXZMeUFnZEdWemRDQTlJR2x6VUdGc2FXNWtjbTl0WlNnbllXSmpaR1ZrWTJKaEp5azdYSEpjYmlBdkx5QWdkR1Z6ZERJZ1BTQnBjMUJoYkdsdVpISnZiV1VvSjJGaVkyUmxaQ2NwTzF4eVhHNWNjbHh1SUM4dklDQmpiMjV6YjJ4bExteHZaeWgwWlhOMEtUdGNjbHh1SUM4dklDQmpiMjV6YjJ4bExteHZaeWgwWlhOME1pazdYSEpjYmlBdkx5QWdaRzlqZFcxbGJuUXVkM0pwZEdVb0oybHpVR0ZzYVc1a2NtOXRaU0J5WlhOMWJIUTZJQ2NnS3lBbmMzUnlJQzBnSnlBcklIUmxjM1FnS3lBbklITjBjaklnTFNBbklDc2dkR1Z6ZERJcE8xeHlYRzVjY2x4dVhISmNibHh5WEc0Z0x5OGdNQ0F0SURFeUlDMGdZbUZpZVZ4eVhHNHZMeUF4TXlBdElERTRJQzBnZEdWbGJseHlYRzR2THlBeE9TQXRJRFl3SUMwZ1lXUjFiSFJjY2x4dUx5OGdOakVnTFNBeE1EQWdMU0J3Wlc1elhISmNibHh5WEc0dkx5QkVUMDFjY2x4dVhISmNibU52Ym5OdmJHVXViRzluS0NkemRISnBibWNuSUNzZ0ozVndjR1Z5WTJGelpTY3BPMXh5WEc1Y2NseHVMeThnVTNSeWFXNW5JQzBnSjNOMGNtbHVaeWNnS3lBeElDOHZJQ2N5SnlBcklESWdQU0FuTWpJbklDOHZJQ2N5SnlBdElESWdQU0F3SUM4dlhISmNiaTh2SUU1MWJXSmxjaUF0SUZ4eVhHNHZMeUJDYjI5c1pXRnVJQzBnZEhKMVpTQXZJR1poYkhObFhISmNiaTh2SUZWdVpHVm1hVzVsWkZ4eVhHNHZMeUJQWW1wbFkzUmNjbHh1THk4Z1JuVnVZM1JwYjI1Y2NseHVYSEpjYm1OdmJuTjBJR1p2Y20wZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdVptOXliU2NwTzF4eVhHNWpiMjV6ZENCaGJuTjNaWElnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1WVc1emQyVnlKeWs3WEhKY2JseHlYRzVtZFc1amRHbHZiaUJvWVc1a1pXeFRkV0p0YVhRb1pYWmxiblFwSUh0Y2NseHVJQ0JsZG1WdWRDNXdjbVYyWlc1MFJHVm1ZWFZzZENncE8xeHlYRzVjY2x4dUlDQmpiMjV6ZENCa1lYUmhJRDBnZTMwN1hISmNibHh5WEc0Z0lHWnZjaWhzWlhRZ2FTQTlJREE3SUdrZ1BDQm1iM0p0TG1Wc1pXMWxiblJ6TG14bGJtZDBhRHNnYVNzcktTQjdYSEpjYmlBZ0lDQnBaaUFvWm05eWJTNWxiR1Z0Wlc1MGMxdHBYUzV1WVcxbElEMDlQU0FuYzNWaWJXbDBKeWtnZTF4eVhHNGdJQ0FnSUNCamIyNTBhVzUxWlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUdSaGRHRmJabTl5YlM1bGJHVnRaVzUwYzF0cFhTNXVZVzFsWFNBOUlHWnZjbTB1Wld4bGJXVnVkSE5iYVYwdWRtRnNkV1U3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2THlCQmNuSmhlUzVtY205dEtHWnZjbTB1Wld4bGJXVnVkSE1wTG1admNrVmhZMmdvWld3Z1BUNGdlMXh5WEc0Z0lDOHZJQ0JwWmlBb1pXd3VibUZ0WlNBaFBUMGdKM04xWW0xcGRDY3BJSEpsZEhWeWJpQmtZWFJoVzJWc0xtNWhiV1ZkSUQwZ1pXd3VkbUZzZFdVN1hISmNiaUFnTHk4Z2ZTazdYSEpjYmx4eVhHNGdJR1oxYm1OMGFXOXVJR2RsZEZOMFlYUjFjeWhoWjJVcElIdGNjbHh1WEhKY2JpQWdJQ0JwWmlBb1lXZGxJRHdnTUNCOGZDQWdZV2RsSUQ0Z01UVXdLU0I3WEhKY2JpQWdJQ0FnSUhKbGRIVnliaUFuU1c1amIzSnlaV04wSUhaaGJIVmxKenRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCcFppQW9ZV2RsSUQ0Z01DQW1KaUJoWjJVZ1BEMGdNVElwSUh0Y2NseHVJQ0FnSUNBZ2NtVjBkWEp1SUNkaVlXSjVKenRjY2x4dUlDQWdJSDBnWld4elpTQnBaaUFvWVdkbElENDlJREV6SUNZbUlHRm5aU0E4UFNBeE9Da2dlMXh5WEc0Z0lDQWdJQ0J5WlhSMWNtNGdKM1JsWlc0bk8xeHlYRzRnSUNBZ2ZTQmxiSE5sSUdsbUlDaGhaMlVnUGowZ01Ua2dKaVlnWVdkbElEdzlJRFl3S1NCN1hISmNiaUFnSUNBZ0lISmxkSFZ5YmlBbllXUjFiSFFuTzF4eVhHNGdJQ0FnZlNCbGJITmxJSHRjY2x4dUlDQWdJQ0FnY21WMGRYSnVJQ2R3Wlc1ekp6dGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibHh5WEc0Z0lHRnVjM2RsY2k1cGJtNWxjbFJsZUhRZ1BTQmdKSHRrWVhSaExtNWhiV1Y5SUNSN1pHRjBZUzV6WldOdVlXMWxmU0JwY3lBa2UyZGxkRk4wWVhSMWN5Z3JaR0YwWVM1aFoyVXBmV0E3WEhKY2JuMWNjbHh1WEhKY2JtWnZjbTB1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduYzNWaWJXbDBKeXdnYUdGdVpHVnNVM1ZpYldsMEtUdGNjbHh1WEhKY2JseHlYRzVqYjI1emRDQndZV3hwYm1SeWIyMUdiM0p0SUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2duWm05eWJTY3BPMXh5WEc1d1lXeHBibVJ5YjIxR2IzSnRMbU5zWVhOelRHbHpkQzVoWkdRb0ozQmhiR2x1WkhKdmJTMW1iM0p0SnlrN1hISmNibVJ2WTNWdFpXNTBMbUp2WkhrdVlYQndaVzVrUTJocGJHUW9jR0ZzYVc1a2NtOXRSbTl5YlNrN1hISmNibHh5WEc1amIyNXpkQ0J3WVd4cGJtUnliMjFKYm5CMWRDQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb0oybHVjSFYwSnlrN1hISmNibU52Ym5OMElIQmhiR2x1WkhKdmJWTjFZbTFwZENBOUlHUnZZM1Z0Wlc1MExtTnlaV0YwWlVWc1pXMWxiblFvSjJsdWNIVjBKeWs3WEhKY2JtTnZibk4wSUhCaGJHbHVaSEp2YlVGdWMzZGxjaUE5SUdSdlkzVnRaVzUwTG1OeVpXRjBaVVZzWlcxbGJuUW9KM0FuS1R0Y2NseHVjR0ZzYVc1a2NtOXRRVzV6ZDJWeUxtTnNZWE56VEdsemRDNWhaR1FvSjNCaGJHbHVaSEp2YlMxbWIzSnRYMTloYm5OM1pYSW5LVHRjY2x4dWNHRnNhVzVrY205dFNXNXdkWFF1YzJWMFFYUjBjbWxpZFhSbEtDZHVZVzFsSnl3Z0oyNTFiV0psY2ljcE8xeHlYRzV3WVd4cGJtUnliMjFKYm5CMWRDNWpiR0Z6YzB4cGMzUXVZV1JrS0Nkd1lXeHBibVJ5YjIwdFptOXliVjlmYVc1d2RYUW5LVHRjY2x4dWNHRnNhVzVrY205dFUzVmliV2wwTG5ObGRFRjBkSEpwWW5WMFpTZ25kSGx3WlNjc0lDZHpkV0p0YVhRbktUdGNjbHh1Y0dGc2FXNWtjbTl0VTNWaWJXbDBMbU5zWVhOelRHbHpkQzVoWkdRb0ozQmhiR2x1WkhKdmJTMW1iM0p0WDE5emRXSnRhWFFuS1R0Y2NseHVjR0ZzYVc1a2NtOXRVM1ZpYldsMExuTmxkRUYwZEhKcFluVjBaU2duZG1Gc2RXVW5MQ0FuVTNWaWJXbDBKeWs3WEhKY2JuQmhiR2x1WkhKdmJVWnZjbTB1WVhCd1pXNWtRMmhwYkdRb2NHRnNhVzVrY205dFNXNXdkWFFwTzF4eVhHNXdZV3hwYm1SeWIyMUdiM0p0TG1Gd2NHVnVaRU5vYVd4a0tIQmhiR2x1WkhKdmJWTjFZbTFwZENrN1hISmNibkJoYkdsdVpISnZiVVp2Y20wdVlYQndaVzVrUTJocGJHUW9jR0ZzYVc1a2NtOXRRVzV6ZDJWeUtUdGNjbHh1WEhKY2JuQmhiR2x1WkhKdmJVWnZjbTB1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduYzNWaWJXbDBKeXdnWm5WdVkzUnBiMjRvWlhabGJuUXBJSHRjY2x4dUlDQmxkbVZ1ZEM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwTzF4eVhHNWNjbHh1SUNCcFppQW9jR0ZzYVc1a2NtOXRTVzV3ZFhRdWRtRnNkV1V1YkdWdVozUm9JQ0U5UFNBMUtTQjdYSEpjYmlBZ0lDQndZV3hwYm1SeWIyMUJibk4zWlhJdWFXNXVaWEpVWlhoMElEMGdKOUNTMExMUXRkQzAwTGpSZ3RDMUlOQy8wWS9SZ3RDNDBMZlF2ZEN3MFlmUXZkQyswTFVnMFlmUXVOR0IwTHZRdmljN1hISmNiaUFnSUNCeVpYUjFjbTQ3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JqYjI1emRDQnBjMUJoYkdsdVpISnZiU0E5SUhCaGJHbHVaSEp2YlVsdWNIVjBMblpoYkhWbExuTndiR2wwS0NjbktTNXlaWFpsY25ObEtDa3VhbTlwYmlnbkp5a2dQVDA5SUhCaGJHbHVaSEp2YlVsdWNIVjBMblpoYkhWbE8xeHlYRzVjY2x4dUlDQXZMM0JoYkdsdVpISnZiVUZ1YzNkbGNpNXBibTVsY2xSbGVIUWdQU0JwYzFCaGJHbHVaSEp2YlNBL0lDZlFuOUN3MEx2UXVOQzkwTFRSZ05DKzBMd25JRG9nSjlDZDBMVWcwTC9Rc05DNzBMalF2ZEMwMFlEUXZ0QzhKenRjY2x4dVhISmNiaUFnTHk4Z2FXWWdLR2x6VUdGc2FXNWtjbTl0SUQwOVBTQjBjblZsS1NCN1hISmNiaUFnTHk4Z0lIQmhiR2x1WkhKdmJVRnVjM2RsY2k1cGJtNWxjbFJsZUhRZ1BTQW4wSi9Rc05DNzBMalF2ZEMwMFlEUXZ0QzhKenRjY2x4dUlDQXZMeUI5SUdWc2MyVWdhV1lnS0dselVHRnNhVzVrY205dElEMDlQU0JtWVd4elpTa2dlMXh5WEc0Z0lDOHZJQ0J3WVd4cGJtUnliMjFCYm5OM1pYSXVhVzV1WlhKVVpYaDBJRDBnSjlDZDBMVWcwTC9Rc05DNzBMalF2ZEMwMFlEUXZ0QzhKenRjY2x4dUlDQXZMeUI5WEhKY2JseHlYRzRnSUdsbUlDaHBjMUJoYkdsdVpISnZiU2tnZTF4eVhHNGdJQ0FnY0dGc2FXNWtjbTl0UVc1emQyVnlMbWx1Ym1WeVZHVjRkQ0E5SUNmUW45Q3cwTHZRdU5DOTBMVFJnTkMrMEx3bk8xeHlYRzRnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0J3WVd4cGJtUnliMjFCYm5OM1pYSXVhVzV1WlhKVVpYaDBJRDBnSjlDZDBMVWcwTC9Rc05DNzBMalF2ZEMwMFlEUXZ0QzhKenRjY2x4dUlDQjlYSEpjYmx4eVhHNWNjbHh1ZlNrN0lsMTkifQ==
